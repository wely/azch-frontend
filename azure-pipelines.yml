# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

name: $(build.sourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)
pool:
  vmImage: 'Ubuntu 16.04'

variables:
  - group: azch-docker 
  - name: dockerRegistryServiceConnection
    value: 'containerRegistryConnection' 
  - name: tag
    value: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: frontend
          dockerfile: '**/Dockerfile'
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: $(tag)
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'manifests'
          targetPath: 'manifests'

- stage: DeployDev
  displayName: Deploy to dev stage
  dependsOn: Build

  variables:
  - name: k8sNamespace # Kubernetes Namespace to deploy to. This variable is scoped to the DeployDev stage.
    value: 'dev'

  jobs:
  - deployment: DeployDev
    displayName: Deploy to dev job
    pool:
      vmImage: ubuntu-latest

    environment: 'aksworkshop.dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: $(System.ArtifactsDirectory)/manifests/*
              containers: '$(acrEndpoint)/captureorder:$(tag)'
